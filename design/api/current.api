// Signature format: 4.0
package com.urlaunched.android.design.extensions {

  public final class GeneralExtensionsKt {
    method @androidx.compose.runtime.Composable public static int toPx(float);
  }

  public enum Keyboard {
    method public static com.urlaunched.android.design.extensions.Keyboard valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static com.urlaunched.android.design.extensions.Keyboard[] values();
    enum_constant public static final com.urlaunched.android.design.extensions.Keyboard CLOSED;
    enum_constant public static final com.urlaunched.android.design.extensions.Keyboard OPENED;
  }

  public final class KeyboardExtensionsKt {
    method public static androidx.compose.ui.Modifier clearFocusOnKeyboardDismiss(androidx.compose.ui.Modifier);
    method @androidx.compose.runtime.Composable public static androidx.compose.runtime.State<com.urlaunched.android.design.extensions.Keyboard> keyboardAsState();
  }

}

package com.urlaunched.android.design.resources.dimens {

  public final class Dimens {
    method public float getCornerRadiusBig();
    method public float getCornerRadiusBigSpecial();
    method public float getCornerRadiusLarge();
    method public float getCornerRadiusMediumSpecial();
    method public float getCornerRadiusNormal();
    method public float getCornerRadiusNormalSpecial();
    method public float getCornerRadiusSmall();
    method public float getCornerRadiusTiny();
    method public float getSpacingBig();
    method public float getSpacingBigSpecial();
    method public float getSpacingExtraLarge();
    method public float getSpacingLarge();
    method public float getSpacingLargeSpecial();
    method public float getSpacingNormal();
    method public float getSpacingNormalSpecial();
    method public float getSpacingSmall();
    method public float getSpacingSmallSpecial();
    method public float getSpacingTiny();
    method public float getSpacingTinyHalf();
    method public float getZeroDp();
    property public final float cornerRadiusBig;
    property public final float cornerRadiusBigSpecial;
    property public final float cornerRadiusLarge;
    property public final float cornerRadiusMediumSpecial;
    property public final float cornerRadiusNormal;
    property public final float cornerRadiusNormalSpecial;
    property public final float cornerRadiusSmall;
    property public final float cornerRadiusTiny;
    property public final float spacingBig;
    property public final float spacingBigSpecial;
    property public final float spacingExtraLarge;
    property public final float spacingLarge;
    property public final float spacingLargeSpecial;
    property public final float spacingNormal;
    property public final float spacingNormalSpecial;
    property public final float spacingSmall;
    property public final float spacingSmallSpecial;
    property public final float spacingTiny;
    property public final float spacingTinyHalf;
    property public final float zeroDp;
    field public static final com.urlaunched.android.design.resources.dimens.Dimens INSTANCE;
  }

}

package com.urlaunched.android.design.ui.backhandler {

  public final class DisableBackButtonKt {
    method @androidx.compose.runtime.Composable public static void DisableBackButton();
  }

}

package com.urlaunched.android.design.ui.clickable {

  public final class DebouncedClickableKt {
    method @androidx.compose.runtime.Composable public static inline kotlin.jvm.functions.Function0<kotlin.Unit> debouncedAction(kotlin.jvm.functions.Function0<kotlin.Unit> block, optional long debounceTime);
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier debouncedClickable(androidx.compose.ui.Modifier, optional long debounceTime, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional androidx.compose.foundation.Indication? indication, optional boolean enabled, optional String? onClickLabel, optional androidx.compose.ui.semantics.Role? role, kotlin.jvm.functions.Function0<kotlin.Unit> onClick);
    field public static final long DEFAULT_ACTION_DEBOUNCE_TIME = 500L; // 0x1f4L
  }

}

package com.urlaunched.android.design.ui.counter.models {

  public final class CounterProperties {
    ctor public CounterProperties(optional long incrementStepDelay, optional long longPressDelay);
    method public long component1();
    method public long component2();
    method public com.urlaunched.android.design.ui.counter.models.CounterProperties copy(long incrementStepDelay, long longPressDelay);
    method public long getIncrementStepDelay();
    method public long getLongPressDelay();
    property public final long incrementStepDelay;
    property public final long longPressDelay;
  }

}

package com.urlaunched.android.design.ui.counter.ui {

  public final class BaseCounterKt {
    method @androidx.compose.runtime.Composable public static void BaseCounter(androidx.compose.ui.Modifier modifier, androidx.compose.ui.Modifier counterModifier, androidx.compose.ui.Modifier counterErrorModifier, optional float counterContainerSize, boolean increaseButtonEnabled, boolean reduceButtonEnabled, String value, androidx.compose.foundation.interaction.MutableInteractionSource increaseButtonInteractionSource, androidx.compose.foundation.interaction.MutableInteractionSource reduceButtonInteractionSource, optional boolean containerEnabled, optional String? error, optional kotlin.jvm.functions.Function0<kotlin.Unit>? errorContainer, optional kotlin.jvm.functions.Function0<kotlin.Unit>? labelContainer, optional kotlin.jvm.functions.Function0<kotlin.Unit>? bottomLabelContainer, kotlin.jvm.functions.Function0<kotlin.Unit> counterIcon, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> counterValueContainer);
  }

  public final class CounterButtonKt {
    method @androidx.compose.runtime.Composable public static void CounterButton(optional kotlin.jvm.functions.Function0<kotlin.Unit> icon, float counterContainerSize, androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, boolean enabled);
  }

  public final class NumberCounterContainerKt {
    method @androidx.compose.runtime.Composable public static void NumberCounterContainer(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier counterModifier, optional androidx.compose.ui.Modifier counterErrorModifier, int count, optional int step, optional Integer? onHoldStep, optional int minCount, optional int maxCount, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onValueChange, optional String? error, optional boolean enabled, optional com.urlaunched.android.design.ui.counter.models.CounterProperties counterProperties, optional kotlin.jvm.functions.Function0<kotlin.Unit>? labelContainer, optional kotlin.jvm.functions.Function0<kotlin.Unit>? bottomLabelContainer, kotlin.jvm.functions.Function0<kotlin.Unit> counterIcon, optional float counterContainerSize, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> counterValueContainer, optional kotlin.jvm.functions.Function0<kotlin.Unit>? errorContainer);
  }

  public final class TimeCounterContainerKt {
    method @androidx.compose.runtime.Composable public static void TimeCounterContainer(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier counterModifier, optional androidx.compose.ui.Modifier counterErrorModifier, optional boolean increaseButtonEnabled, optional boolean reduceButtonEnabled, String timeValue, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onTimeChange, optional boolean enabled, int timeChangeMinutes, optional String? error, optional kotlin.jvm.functions.Function0<kotlin.Unit>? labelContainer, optional kotlin.jvm.functions.Function0<kotlin.Unit>? bottomLabelContainer, kotlin.jvm.functions.Function0<kotlin.Unit> counterIcon, optional float counterContainerSize, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> counterValueContainer, optional kotlin.jvm.functions.Function0<kotlin.Unit>? errorContainer);
  }

}

package com.urlaunched.android.design.ui.expandabletext {

  public final class ExpandableTextKt {
    method @androidx.compose.runtime.Composable public static void ExpandableText(optional androidx.compose.ui.Modifier modifier, String text, int maxLines, androidx.compose.ui.text.TextStyle textStyle, androidx.compose.ui.text.TextStyle expandTextStyle, String expandText, String collapseText, String expandSuffix);
  }

}

package com.urlaunched.android.design.ui.exposedDropdown {

  public final class BaseExposedDropdownMenuKt {
    method @androidx.compose.runtime.Composable public static void BaseExposedDropdownMenu(optional androidx.compose.ui.Modifier modifier, boolean expanded, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional long offset, optional androidx.compose.ui.window.PopupProperties properties, float verticalDropDownMargin, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class CustomDropdownMenuTextFieldKt {
    method @androidx.compose.runtime.Composable public static void CustomDropdownMenuTextField(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier menuModifier, boolean expanded, optional androidx.compose.ui.graphics.Shape menuShape, optional float maxMenuHeight, optional long menuBackground, optional androidx.compose.foundation.BorderStroke? menuBorder, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onExpandedChange, kotlin.jvm.functions.Function0<kotlin.Unit> onDismiss, androidx.compose.ui.window.PopupProperties popUpProperties, float verticalDropDownMargin, kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier,kotlin.Unit> textField, kotlin.jvm.functions.Function0<kotlin.Unit> menuItems);
  }

  public final class PagingDropdownMenuTextFieldKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingDropdownMenuTextField(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier menuModifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, boolean expanded, optional kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onExpandedChange, optional kotlin.jvm.functions.Function0<kotlin.Unit> onDismiss, optional androidx.compose.foundation.lazy.LazyListState lazyListState, optional float maxHeight, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.graphics.Shape menuShape, optional float maxMenuHeight, optional long menuBackground, optional androidx.compose.foundation.BorderStroke? menuBorder, optional float verticalDropDownMargin, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional int placeholderItemNum, optional androidx.compose.ui.window.PopupProperties popupProperties, kotlin.jvm.functions.Function1<? super androidx.compose.ui.Modifier,kotlin.Unit> textField, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item);
  }

}

package com.urlaunched.android.design.ui.image {

  public final class UrlImageKt {
    method @androidx.compose.runtime.Composable public static void UrlImage(optional androidx.compose.ui.Modifier modifier, Object? model, optional kotlin.jvm.functions.Function0<kotlin.Unit> placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit> errorPlaceholder, optional androidx.compose.ui.layout.ContentScale scale, optional androidx.compose.ui.layout.ContentScale cdnScale, optional androidx.compose.ui.graphics.ColorFilter? colorFilter, optional String? contentDescription, optional androidx.compose.ui.unit.DpSize? fixedImageSize, optional float alpha, optional coil.ImageLoader imageLoader, optional float cdnScaleFactor, optional kotlin.jvm.functions.Function1<? super coil.request.SuccessResult,kotlin.Unit> onSuccess, optional kotlin.jvm.functions.Function0<kotlin.Unit> onError);
  }

}

package com.urlaunched.android.design.ui.modifiers {

  public final class IfNotNullKt {
    method public static inline <T> androidx.compose.ui.Modifier ifNotNull(androidx.compose.ui.Modifier, T? value, kotlin.jvm.functions.Function1<? super T,? extends androidx.compose.ui.Modifier> builder);
  }

}

package com.urlaunched.android.design.ui.paging {

  public final class PagingColumnKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingColumn(optional androidx.compose.ui.Modifier modifier, androidx.paging.compose.LazyPagingItems<T> pagingItems, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingColumn(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingColumn(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingContainerKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingContainer(androidx.paging.compose.LazyPagingItems<T> pagingItems, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function1<? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> pagingContent);
    method @androidx.compose.runtime.Composable public static <T> void PagingContainer(kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function1<? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> pagingContent);
  }

  public final class PagingHorizontalGridKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingHorizontalGrid(optional androidx.compose.ui.Modifier modifier, androidx.paging.compose.LazyPagingItems<T> pagingItems, androidx.compose.foundation.lazy.grid.GridCells rows, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingHorizontalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells rows, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super T,kotlin.Unit> item, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingHorizontalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells rows, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingPullRefreshColumnKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshColumn(optional androidx.compose.ui.Modifier modifier, androidx.paging.compose.LazyPagingItems<T> pagingItems, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshColumn(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshColumn(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingPullRefreshVerticalGridKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshVerticalGrid(optional androidx.compose.ui.Modifier modifier, androidx.paging.compose.LazyPagingItems<T> pagingItems, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshVerticalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingPullRefreshVerticalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long refreshIndicatorBackgroundColor, optional long refreshIndicatorContentColor, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingRowKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingRow(optional androidx.compose.ui.Modifier modifier, androidx.paging.compose.LazyPagingItems<T> pagingItems, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingRow(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingRow(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.LazyListState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.LazyItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyListScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.LazyItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.LazyItemScope,kotlin.Unit>? appendIndicator);
  }

  public final class PagingState<T> {
    ctor public PagingState(androidx.paging.compose.LazyPagingItems<T> pagingItems, boolean isLoading, boolean isAppendLoading, boolean isLoadingError, boolean isAppendError, boolean isNoItems);
    method public androidx.paging.compose.LazyPagingItems<T> component1();
    method public boolean component2();
    method public boolean component3();
    method public boolean component4();
    method public boolean component5();
    method public boolean component6();
    method public com.urlaunched.android.design.ui.paging.PagingState<T> copy(androidx.paging.compose.LazyPagingItems<T> pagingItems, boolean isLoading, boolean isAppendLoading, boolean isLoadingError, boolean isAppendError, boolean isNoItems);
    method public androidx.paging.compose.LazyPagingItems<T> getPagingItems();
    method public boolean isAppendError();
    method public boolean isAppendLoading();
    method public boolean isLoading();
    method public boolean isLoadingError();
    method public boolean isNoItems();
    property public final boolean isAppendError;
    property public final boolean isAppendLoading;
    property public final boolean isLoading;
    property public final boolean isLoadingError;
    property public final boolean isNoItems;
    property public final androidx.paging.compose.LazyPagingItems<T> pagingItems;
  }

  public final class PagingVerticalGridKt {
    method @androidx.compose.runtime.Composable public static <T> void PagingVerticalGrid(optional androidx.compose.ui.Modifier modifier, androidx.paging.compose.LazyPagingItems<T> pagingItems, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingVerticalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super T,kotlin.Unit> item, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
    method @androidx.compose.runtime.Composable public static <T> void PagingVerticalGrid(optional androidx.compose.ui.Modifier modifier, kotlinx.coroutines.flow.Flow<androidx.paging.PagingData<T>> pagingDataFlow, androidx.compose.foundation.lazy.grid.GridCells columns, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.lazy.grid.LazyGridState state, optional boolean reverseLayout, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior, optional boolean userScrollEnabled, optional int placeholderItemsNum, optional long defaultIndicatorTrackColor, optional long defaultIndicatorColor, kotlin.jvm.functions.Function2<? super java.lang.String,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,?> showSnackbar, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,kotlin.Unit> placeholderItem, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super java.lang.Integer,? super java.lang.Integer,? super T,kotlin.Unit> item, optional kotlin.jvm.functions.Function1<? super T,?>? itemKey, optional kotlin.jvm.functions.Function1<? super T,?>? itemContentType, optional kotlin.jvm.functions.Function1<? super T,androidx.compose.foundation.lazy.grid.GridItemSpan>? itemSpan, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? startItems, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit>? endItems, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit> noItemsPlaceholder, optional kotlin.jvm.functions.Function2<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,? super com.urlaunched.android.design.ui.paging.PagingState<T>,kotlin.Unit> onLoadingError, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Unit>? appendIndicator);
  }

}

package com.urlaunched.android.design.ui.progressbarcontainer {

  public final class ProgressBarContainerKt {
    method @androidx.compose.runtime.Composable public static void ProgressBarContainer(optional androidx.compose.ui.Modifier modifier, boolean isLoading, optional long indicatorColor, optional long indicatorTrackColor, optional float progress, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> progressContent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ProgressBarContainer(optional androidx.compose.ui.Modifier modifier, boolean isLoading, optional long indicatorColor, optional long indicatorTrackColor, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

}

package com.urlaunched.android.design.ui.pulltorefresh {

  public final class PullToRefreshBoxKt {
    method @androidx.compose.runtime.Composable public static void PullToRefreshBox(optional androidx.compose.ui.Modifier modifier, kotlin.jvm.functions.Function0<kotlin.Unit> onRefresh, boolean isRefreshing, optional androidx.compose.material.pullrefresh.PullRefreshState state, optional long containerColor, optional kotlin.jvm.functions.Function0<kotlin.Unit> topBar, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
  }

}

package com.urlaunched.android.design.ui.scrollbar {

  public final class ColumnScrollbarKt {
    method @androidx.compose.runtime.Composable public static void ColumnScrollbar(androidx.compose.foundation.ScrollState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Float,? super java.lang.Boolean,kotlin.Unit>? indicatorContent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void InternalColumnScrollbar(androidx.compose.foundation.ScrollState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Float,? super java.lang.Boolean,kotlin.Unit>? indicatorContent, float visibleLengthDp);
  }

  public final class LazyColumnScrollbarKt {
    method @androidx.compose.runtime.Composable public static void InternalLazyColumnScrollbar(androidx.compose.foundation.lazy.LazyListState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit>? indicatorContent);
    method @androidx.compose.runtime.Composable public static void LazyColumnScrollbar(androidx.compose.foundation.lazy.LazyListState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit>? indicatorContent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class LazyHorizontalGridScrollbarKt {
    method @androidx.compose.runtime.Composable public static void InternalLazyHorizontalGridScrollbar(androidx.compose.foundation.lazy.grid.LazyGridState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit>? indicatorContent);
    method @androidx.compose.runtime.Composable public static void LazyHorizontalGridScrollbar(androidx.compose.foundation.lazy.grid.LazyGridState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit>? indicatorContent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class LazyRowScrollbarKt {
    method @androidx.compose.runtime.Composable public static void InternalLazyRowScrollbar(androidx.compose.foundation.lazy.LazyListState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit>? indicatorContent);
    method @androidx.compose.runtime.Composable public static void LazyRowScrollbar(androidx.compose.foundation.lazy.LazyListState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit>? indicatorContent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class LazyVerticalGridScrollbarKt {
    method @androidx.compose.runtime.Composable public static void InternalLazyVerticalGridScrollbar(androidx.compose.foundation.lazy.grid.LazyGridState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit>? indicatorContent);
    method @androidx.compose.runtime.Composable public static void LazyVerticalGridScrollbar(androidx.compose.foundation.lazy.grid.LazyGridState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Integer,? super java.lang.Boolean,kotlin.Unit>? indicatorContent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class RowScrollbarKt {
    method @androidx.compose.runtime.Composable public static void InternalRowScrollbar(androidx.compose.foundation.ScrollState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Float,? super java.lang.Boolean,kotlin.Unit>? indicatorContent, float visibleLengthDp);
    method @androidx.compose.runtime.Composable public static void RowScrollbar(androidx.compose.foundation.ScrollState state, optional androidx.compose.ui.Modifier modifier, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings settings, optional kotlin.jvm.functions.Function2<? super java.lang.Float,? super java.lang.Boolean,kotlin.Unit>? indicatorContent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public enum ScrollbarLayoutSide {
    method public static com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide[] values();
    enum_constant public static final com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide End;
    enum_constant public static final com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide Start;
  }

  public enum ScrollbarSelectionActionable {
    method public static com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable[] values();
    enum_constant public static final com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable Always;
    enum_constant public static final com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable WhenVisible;
  }

  public enum ScrollbarSelectionMode {
    method public static com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode[] values();
    enum_constant public static final com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode Disabled;
    enum_constant public static final com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode Full;
    enum_constant public static final com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode Thumb;
  }

  @androidx.compose.runtime.Stable public final class ScrollbarSettings {
    ctor public ScrollbarSettings(optional boolean enabled, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide side, optional boolean alwaysShowScrollbar, optional float scrollbarPadding, optional float thumbThickness, optional androidx.compose.ui.graphics.Shape thumbShape, optional float thumbMinLength, optional float thumbMaxLength, optional long thumbUnselectedColor, optional long thumbSelectedColor, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode selectionMode, optional com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable selectionActionable, optional int hideDelayMillis, optional float hideDisplacement, optional androidx.compose.animation.core.Easing hideEasingAnimation, optional int durationAnimationMillis);
    method public boolean component1();
    method public long component10-0d7_KjU();
    method public com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode component11();
    method public com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable component12();
    method public int component13();
    method public float component14-D9Ej5fM();
    method public androidx.compose.animation.core.Easing component15();
    method public int component16();
    method public com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide component2();
    method public boolean component3();
    method public float component4-D9Ej5fM();
    method public float component5-D9Ej5fM();
    method public androidx.compose.ui.graphics.Shape component6();
    method public float component7();
    method public float component8();
    method public long component9-0d7_KjU();
    method public com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings copy-tuVzt9c(boolean enabled, com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide side, boolean alwaysShowScrollbar, float scrollbarPadding, float thumbThickness, androidx.compose.ui.graphics.Shape thumbShape, float thumbMinLength, float thumbMaxLength, long thumbUnselectedColor, long thumbSelectedColor, com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode selectionMode, com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable selectionActionable, int hideDelayMillis, float hideDisplacement, androidx.compose.animation.core.Easing hideEasingAnimation, int durationAnimationMillis);
    method public boolean getAlwaysShowScrollbar();
    method public int getDurationAnimationMillis();
    method public boolean getEnabled();
    method public int getHideDelayMillis();
    method public float getHideDisplacement();
    method public androidx.compose.animation.core.Easing getHideEasingAnimation();
    method public float getScrollbarPadding();
    method public com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable getSelectionActionable();
    method public com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode getSelectionMode();
    method public com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide getSide();
    method public float getThumbMaxLength();
    method public float getThumbMinLength();
    method public long getThumbSelectedColor();
    method public androidx.compose.ui.graphics.Shape getThumbShape();
    method public float getThumbThickness();
    method public long getThumbUnselectedColor();
    property public final boolean alwaysShowScrollbar;
    property public final int durationAnimationMillis;
    property public final boolean enabled;
    property public final int hideDelayMillis;
    property public final float hideDisplacement;
    property public final androidx.compose.animation.core.Easing hideEasingAnimation;
    property public final float scrollbarPadding;
    property public final com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionActionable selectionActionable;
    property public final com.urlaunched.android.design.ui.scrollbar.ScrollbarSelectionMode selectionMode;
    property public final com.urlaunched.android.design.ui.scrollbar.ScrollbarLayoutSide side;
    property public final float thumbMaxLength;
    property public final float thumbMinLength;
    property public final long thumbSelectedColor;
    property public final androidx.compose.ui.graphics.Shape thumbShape;
    property public final float thumbThickness;
    property public final long thumbUnselectedColor;
    field public static final com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings.Companion Companion;
  }

  public static final class ScrollbarSettings.Companion {
    method public com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings getDefault();
    property public final com.urlaunched.android.design.ui.scrollbar.ScrollbarSettings Default;
  }

}

package com.urlaunched.android.design.ui.scrollbar.controller {

  @androidx.compose.runtime.Stable public interface StateController<IndicatorValue> {
    method public androidx.compose.runtime.State<java.lang.Boolean> getThumbIsInAction();
    method public androidx.compose.runtime.State<java.lang.Float> getThumbOffsetNormalized();
    method public androidx.compose.runtime.State<java.lang.Float> getThumbSizeNormalized();
    method public IndicatorValue indicatorValue();
    method public androidx.compose.runtime.State<java.lang.Boolean> isSelected();
    method public void onDragStarted(float offsetPixels, float maxLengthPixels);
    method public void onDragStopped();
    method public void onDraggableState(float deltaPixels, float maxLengthPixels);
    property public abstract androidx.compose.runtime.State<java.lang.Boolean> isSelected;
    property public abstract androidx.compose.runtime.State<java.lang.Boolean> thumbIsInAction;
    property public abstract androidx.compose.runtime.State<java.lang.Float> thumbOffsetNormalized;
    property public abstract androidx.compose.runtime.State<java.lang.Float> thumbSizeNormalized;
  }

}

package com.urlaunched.android.design.ui.shadow {

  public final class ShadowKt {
    method public static androidx.compose.ui.Modifier shadow(androidx.compose.ui.Modifier, optional long color, optional float alpha, optional float cornersRadius, optional float shadowBlurRadius, optional long offset);
  }

}

package com.urlaunched.android.design.ui.shimmer {

  public final class ShimmerKt {
    method public static androidx.compose.ui.Modifier shimmer(androidx.compose.ui.Modifier, optional long backgroundColor, optional long highlightColor, optional androidx.compose.ui.graphics.Shape shape);
  }

}

package com.urlaunched.android.design.ui.slider {

  public final class MaterialSliderKt {
    method @androidx.compose.runtime.Composable public static void Thumb(androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.SliderColors colors, optional boolean enabled, optional long thumbSize, optional long indicationColor);
    method @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void Track(androidx.compose.material3.SliderState sliderState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.SliderColors colors, optional boolean enabled);
  }

}

package com.urlaunched.android.design.ui.textfield {

  public final class LocalTextFieldConfigsKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.SolidColor> getLocalCursorBrush();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> getLocalSelectionBackgroundColor();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> getLocalSelectionHandleColor();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldBackgroundConfig> getLocalTextFieldBackgroundConfig();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldBorderConfig> getLocalTextFieldBorderConfig();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldBottomLabelConfig> getLocalTextFieldBottomLabelConfig();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldCounterConfig> getLocalTextFieldCounterConfig();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldErrorTextConfig> getLocalTextFieldErrorTextConfig();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldInputPlaceholderTextConfig> getLocalTextFieldInputPlaceholderTextConfig();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldInputTextConfig> getLocalTextFieldInputTextConfig();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldTopLabelConfig> getLocalTextFieldTopLabelConfig();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldsSpacerConfig> getLocalTextFieldsSpacerConfig();
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.SolidColor> LocalCursorBrush;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> LocalSelectionBackgroundColor;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> LocalSelectionHandleColor;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldBackgroundConfig> LocalTextFieldBackgroundConfig;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldBorderConfig> LocalTextFieldBorderConfig;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldBottomLabelConfig> LocalTextFieldBottomLabelConfig;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldCounterConfig> LocalTextFieldCounterConfig;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldErrorTextConfig> LocalTextFieldErrorTextConfig;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldInputPlaceholderTextConfig> LocalTextFieldInputPlaceholderTextConfig;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldInputTextConfig> LocalTextFieldInputTextConfig;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldTopLabelConfig> LocalTextFieldTopLabelConfig;
    property public static final androidx.compose.runtime.ProvidableCompositionLocal<com.urlaunched.android.design.ui.textfield.models.TextFieldsSpacerConfig> LocalTextFieldsSpacerConfig;
  }

  public final class PasswordTextFieldKt {
    method @androidx.compose.runtime.Composable public static void PasswordTextField(optional androidx.compose.ui.Modifier modifier, String value, optional String? label, optional com.urlaunched.android.design.ui.textfield.models.TextFieldBorderConfig borderConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldInputTextConfig inputTextConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldErrorTextConfig errorTextConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldInputPlaceholderTextConfig inputPlaceholderTextConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldTopLabelConfig topLabelConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldBottomLabelConfig bottomLabelConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldBackgroundConfig backgroundConfig, optional long selectionHandleColor, optional long selectionBackgroundColor, optional androidx.compose.ui.graphics.Brush cursorBrush, optional String? placeHolder, optional String? bottomLabel, optional String? error, optional boolean enabled, optional androidx.compose.foundation.text.KeyboardActions keyboardActions, optional androidx.compose.ui.unit.Dp? textFieldHeight, optional boolean readOnly, optional androidx.compose.foundation.layout.PaddingValues innerPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? labelIcon, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onValueChange, kotlin.jvm.functions.Function0<kotlin.Unit> passwordVisibleIcon, kotlin.jvm.functions.Function0<kotlin.Unit> passwordHiddenIcon);
  }

  public final class TextFieldKt {
    method @androidx.compose.runtime.Composable public static void TextField(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Modifier innerFieldModifier, String value, optional String? label, optional com.urlaunched.android.design.ui.textfield.models.TextFieldBorderConfig borderConfig, optional androidx.compose.ui.Alignment.Vertical inputTextAlignment, optional com.urlaunched.android.design.ui.textfield.models.TextFieldInputTextConfig inputTextConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldErrorTextConfig errorTextConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldInputPlaceholderTextConfig inputPlaceholderTextConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldTopLabelConfig topLabelConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldBottomLabelConfig bottomLabelConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldCounterConfig counterConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldBackgroundConfig backgroundConfig, optional com.urlaunched.android.design.ui.textfield.models.TextFieldsSpacerConfig textFieldsSpacerConfig, optional long selectionHandleColor, optional long selectionBackgroundColor, optional androidx.compose.ui.graphics.Brush cursorBrush, optional String? placeHolder, optional String? bottomLabel, optional String? error, optional boolean enabled, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.KeyboardActions keyboardActions, optional boolean singleLine, optional int maxLines, optional int minLines, optional androidx.compose.ui.text.input.VisualTransformation visualTransformation, optional boolean collapseLabel, optional androidx.compose.ui.unit.Dp? textFieldHeight, optional boolean readOnly, optional androidx.compose.foundation.layout.PaddingValues innerPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? labelIcon, optional boolean trailingIconAlwaysShown, optional Integer? maxSymbols, optional String? counterFormat, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onValueChange);
  }

}

package com.urlaunched.android.design.ui.textfield.models {

  public final class TextFieldBackgroundConfig {
    ctor public TextFieldBackgroundConfig(optional long focusedColor, optional long unfocusedColor, optional androidx.compose.ui.graphics.Shape shape);
    method public long component1-0d7_KjU();
    method public long component2-0d7_KjU();
    method public androidx.compose.ui.graphics.Shape component3();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldBackgroundConfig copy-jxsXWHM(long focusedColor, long unfocusedColor, androidx.compose.ui.graphics.Shape shape);
    method public long getFocusedColor();
    method public androidx.compose.ui.graphics.Shape getShape();
    method public long getUnfocusedColor();
    property public final long focusedColor;
    property public final androidx.compose.ui.graphics.Shape shape;
    property public final long unfocusedColor;
  }

  public final class TextFieldBorderConfig {
    ctor public TextFieldBorderConfig(optional long focusedColor, optional long unfocusedColor, optional androidx.compose.ui.graphics.Color? errorColor, optional float width, optional androidx.compose.ui.graphics.Shape shape);
    method public long component1-0d7_KjU();
    method public long component2-0d7_KjU();
    method public androidx.compose.ui.graphics.Color? component3-QN2ZGVo();
    method public float component4-D9Ej5fM();
    method public androidx.compose.ui.graphics.Shape component5();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldBorderConfig copy-4rg-dJQ(long focusedColor, long unfocusedColor, androidx.compose.ui.graphics.Color? errorColor, float width, androidx.compose.ui.graphics.Shape shape);
    method public androidx.compose.ui.graphics.Color? getErrorColor();
    method public long getFocusedColor();
    method public androidx.compose.ui.graphics.Shape getShape();
    method public long getUnfocusedColor();
    method public float getWidth();
    property public final androidx.compose.ui.graphics.Color? errorColor;
    property public final long focusedColor;
    property public final androidx.compose.ui.graphics.Shape shape;
    property public final long unfocusedColor;
    property public final float width;
  }

  public final class TextFieldBottomLabelConfig {
    ctor public TextFieldBottomLabelConfig(optional long focusedColor, optional long unfocusedColor, optional androidx.compose.ui.text.TextStyle textStyle);
    method public long component1-0d7_KjU();
    method public long component2-0d7_KjU();
    method public androidx.compose.ui.text.TextStyle component3();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldBottomLabelConfig copy-jxsXWHM(long focusedColor, long unfocusedColor, androidx.compose.ui.text.TextStyle textStyle);
    method public long getFocusedColor();
    method public androidx.compose.ui.text.TextStyle getTextStyle();
    method public long getUnfocusedColor();
    property public final long focusedColor;
    property public final androidx.compose.ui.text.TextStyle textStyle;
    property public final long unfocusedColor;
  }

  public final class TextFieldCounterConfig {
    ctor public TextFieldCounterConfig(optional long focusedColor, optional long unfocusedColor, optional androidx.compose.ui.text.TextStyle textStyle);
    method public long component1-0d7_KjU();
    method public long component2-0d7_KjU();
    method public androidx.compose.ui.text.TextStyle component3();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldCounterConfig copy-jxsXWHM(long focusedColor, long unfocusedColor, androidx.compose.ui.text.TextStyle textStyle);
    method public long getFocusedColor();
    method public androidx.compose.ui.text.TextStyle getTextStyle();
    method public long getUnfocusedColor();
    property public final long focusedColor;
    property public final androidx.compose.ui.text.TextStyle textStyle;
    property public final long unfocusedColor;
  }

  public final class TextFieldErrorTextConfig {
    ctor public TextFieldErrorTextConfig(optional long focusedColor, optional long unfocusedColor, optional androidx.compose.ui.text.TextStyle textStyle);
    method public long component1-0d7_KjU();
    method public long component2-0d7_KjU();
    method public androidx.compose.ui.text.TextStyle component3();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldErrorTextConfig copy-jxsXWHM(long focusedColor, long unfocusedColor, androidx.compose.ui.text.TextStyle textStyle);
    method public long getFocusedColor();
    method public androidx.compose.ui.text.TextStyle getTextStyle();
    method public long getUnfocusedColor();
    property public final long focusedColor;
    property public final androidx.compose.ui.text.TextStyle textStyle;
    property public final long unfocusedColor;
  }

  public final class TextFieldInputPlaceholderTextConfig {
    ctor public TextFieldInputPlaceholderTextConfig(optional long color, optional androidx.compose.ui.text.TextStyle textStyle);
    method public long component1-0d7_KjU();
    method public androidx.compose.ui.text.TextStyle component2();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldInputPlaceholderTextConfig copy-DxMtmZc(long color, androidx.compose.ui.text.TextStyle textStyle);
    method public long getColor();
    method public androidx.compose.ui.text.TextStyle getTextStyle();
    property public final long color;
    property public final androidx.compose.ui.text.TextStyle textStyle;
  }

  public final class TextFieldInputTextConfig {
    ctor public TextFieldInputTextConfig(optional long focusedColor, optional long unfocusedColor, optional androidx.compose.ui.graphics.Color? errorColor, optional androidx.compose.ui.text.TextStyle textStyle);
    method public long component1-0d7_KjU();
    method public long component2-0d7_KjU();
    method public androidx.compose.ui.graphics.Color? component3-QN2ZGVo();
    method public androidx.compose.ui.text.TextStyle component4();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldInputTextConfig copy-7IjYoR4(long focusedColor, long unfocusedColor, androidx.compose.ui.graphics.Color? errorColor, androidx.compose.ui.text.TextStyle textStyle);
    method public androidx.compose.ui.graphics.Color? getErrorColor();
    method public long getFocusedColor();
    method public androidx.compose.ui.text.TextStyle getTextStyle();
    method public long getUnfocusedColor();
    property public final androidx.compose.ui.graphics.Color? errorColor;
    property public final long focusedColor;
    property public final androidx.compose.ui.text.TextStyle textStyle;
    property public final long unfocusedColor;
  }

  public final class TextFieldTopLabelConfig {
    ctor public TextFieldTopLabelConfig(optional long focusedColor, optional long unfocusedColor, optional androidx.compose.ui.graphics.Color? errorColor, optional androidx.compose.ui.text.TextStyle textStyle);
    method public long component1-0d7_KjU();
    method public long component2-0d7_KjU();
    method public androidx.compose.ui.graphics.Color? component3-QN2ZGVo();
    method public androidx.compose.ui.text.TextStyle component4();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldTopLabelConfig copy-7IjYoR4(long focusedColor, long unfocusedColor, androidx.compose.ui.graphics.Color? errorColor, androidx.compose.ui.text.TextStyle textStyle);
    method public androidx.compose.ui.graphics.Color? getErrorColor();
    method public long getFocusedColor();
    method public androidx.compose.ui.text.TextStyle getTextStyle();
    method public long getUnfocusedColor();
    property public final androidx.compose.ui.graphics.Color? errorColor;
    property public final long focusedColor;
    property public final androidx.compose.ui.text.TextStyle textStyle;
    property public final long unfocusedColor;
  }

  public final class TextFieldsSpacerConfig {
    ctor public TextFieldsSpacerConfig(optional float labelSpacer, optional float labelIconSpacer, optional float leadingIconSpacer, optional float trailingIconSpacer, optional float errorSpacer);
    method public float component1-D9Ej5fM();
    method public float component2-D9Ej5fM();
    method public float component3-D9Ej5fM();
    method public float component4-D9Ej5fM();
    method public float component5-D9Ej5fM();
    method public com.urlaunched.android.design.ui.textfield.models.TextFieldsSpacerConfig copy-RyVG9vg(float labelSpacer, float labelIconSpacer, float leadingIconSpacer, float trailingIconSpacer, float errorSpacer);
    method public float getErrorSpacer();
    method public float getLabelIconSpacer();
    method public float getLabelSpacer();
    method public float getLeadingIconSpacer();
    method public float getTrailingIconSpacer();
    property public final float errorSpacer;
    property public final float labelIconSpacer;
    property public final float labelSpacer;
    property public final float leadingIconSpacer;
    property public final float trailingIconSpacer;
  }

}

package com.urlaunched.android.design.ui.tutorial.models {

  public final class TutorialItem {
    ctor public TutorialItem(com.urlaunched.android.design.ui.tutorial.models.TutorialLayoutCoordinates layoutCoordinates, kotlin.jvm.functions.Function2<? super androidx.compose.ui.Modifier,? super kotlin.jvm.functions.Function0<kotlin.Unit>,kotlin.Unit> content, optional com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition position, optional kotlin.jvm.functions.Function0<kotlin.Unit> onItemSwitch, optional int additionalOffsetX, optional int additionalOffsetY, optional float defaultCircleScale, optional boolean needToShowContentAnimation, optional long tutorialAnimationDelay);
    method public com.urlaunched.android.design.ui.tutorial.models.TutorialLayoutCoordinates component1();
    method public kotlin.jvm.functions.Function2<androidx.compose.ui.Modifier,kotlin.jvm.functions.Function0<kotlin.Unit>,kotlin.Unit> component2();
    method public com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition component3();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> component4();
    method public int component5();
    method public int component6();
    method public float component7();
    method public boolean component8();
    method public long component9-UwyO8pc();
    method public com.urlaunched.android.design.ui.tutorial.models.TutorialItem copy-oluzAQE(com.urlaunched.android.design.ui.tutorial.models.TutorialLayoutCoordinates layoutCoordinates, kotlin.jvm.functions.Function2<? super androidx.compose.ui.Modifier,? super kotlin.jvm.functions.Function0<kotlin.Unit>,kotlin.Unit> content, com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition position, kotlin.jvm.functions.Function0<kotlin.Unit> onItemSwitch, int additionalOffsetX, int additionalOffsetY, float defaultCircleScale, boolean needToShowContentAnimation, long tutorialAnimationDelay);
    method public int getAdditionalOffsetX();
    method public int getAdditionalOffsetY();
    method public kotlin.jvm.functions.Function2<androidx.compose.ui.Modifier,kotlin.jvm.functions.Function0<kotlin.Unit>,kotlin.Unit> getContent();
    method public float getDefaultCircleScale();
    method public com.urlaunched.android.design.ui.tutorial.models.TutorialLayoutCoordinates getLayoutCoordinates();
    method public boolean getNeedToShowContentAnimation();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getOnItemSwitch();
    method public com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition getPosition();
    method public long getTutorialAnimationDelay();
    property public final int additionalOffsetX;
    property public final int additionalOffsetY;
    property public final kotlin.jvm.functions.Function2<androidx.compose.ui.Modifier,kotlin.jvm.functions.Function0<kotlin.Unit>,kotlin.Unit> content;
    property public final float defaultCircleScale;
    property public final com.urlaunched.android.design.ui.tutorial.models.TutorialLayoutCoordinates layoutCoordinates;
    property public final boolean needToShowContentAnimation;
    property public final kotlin.jvm.functions.Function0<kotlin.Unit> onItemSwitch;
    property public final com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition position;
    property public final long tutorialAnimationDelay;
  }

  public enum TutorialItemPosition {
    method public static com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition valueOf(String value) throws java.lang.IllegalArgumentException, java.lang.NullPointerException;
    method public static com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition[] values();
    enum_constant public static final com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition BOTTOM;
    enum_constant public static final com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition LEFT;
    enum_constant public static final com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition RIGHT;
    enum_constant public static final com.urlaunched.android.design.ui.tutorial.models.TutorialItemPosition TOP;
  }

  public final class TutorialLayoutCoordinates {
    ctor public TutorialLayoutCoordinates(optional long center, optional float width, optional float height);
    method public long component1-F1C5BW0();
    method public float component2();
    method public float component3();
    method public com.urlaunched.android.design.ui.tutorial.models.TutorialLayoutCoordinates copy-9KIMszo(long center, float width, float height);
    method public long getCenter();
    method public float getHeight();
    method public float getWidth();
    property public final long center;
    property public final float height;
    property public final float width;
  }

  public final class TutorialProperties {
    ctor public TutorialProperties(optional long defaultTutorialPreviewTime, optional int delayBeforeStartTutorial, optional int circleRadiusAnimationDuration, optional int contentAlphaAnimationDuration);
    method public long component1();
    method public int component2();
    method public int component3();
    method public int component4();
    method public com.urlaunched.android.design.ui.tutorial.models.TutorialProperties copy(long defaultTutorialPreviewTime, int delayBeforeStartTutorial, int circleRadiusAnimationDuration, int contentAlphaAnimationDuration);
    method public int getCircleRadiusAnimationDuration();
    method public int getContentAlphaAnimationDuration();
    method public long getDefaultTutorialPreviewTime();
    method public int getDelayBeforeStartTutorial();
    property public final int circleRadiusAnimationDuration;
    property public final int contentAlphaAnimationDuration;
    property public final long defaultTutorialPreviewTime;
    property public final int delayBeforeStartTutorial;
  }

}

package com.urlaunched.android.design.ui.tutorial.ui {

  public final class TutorialContainerKt {
    method @androidx.compose.runtime.Composable public static void TutorialContainer(java.util.List<com.urlaunched.android.design.ui.tutorial.models.TutorialItem> tutorialItems, optional boolean showTutorialsAutomatically, optional long backgroundColor, optional com.urlaunched.android.design.ui.tutorial.models.TutorialProperties tutorialProperties, kotlin.jvm.functions.Function1<? super kotlin.jvm.functions.Function0<kotlin.Unit>,kotlin.Unit> content);
  }

  public final class TutorialModifierKt {
    method public static androidx.compose.ui.Modifier tutorial(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super com.urlaunched.android.design.ui.tutorial.models.TutorialLayoutCoordinates,kotlin.Unit> setTutorialLayoutCoordinates, optional int additionalOffsetX, optional int additionalOffsetY, optional int additionalSize);
  }

}

package com.urlaunched.android.design.ui.tutorial.utils {

  public final class TutorialUtils {
    field public static final com.urlaunched.android.design.ui.tutorial.utils.TutorialUtils INSTANCE;
  }

}

